version: '3'

volumes:
  pgdatasource:

services:
  ewok-db:
    image: postgres
    container_name: db
    restart: always
    environment:
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ewok
    ports:
      - '5432:5432'
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdatasource:/var/lib/postgresql/data

  ewok-api:
    build: api/
    container_name: api
    depends_on:
      ewok-db:
        condition: service_healthy
    ports: 
      - '8080:8080'
    networks:
      - app-network
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=ewok-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ewok
    volumes:
      - type: bind
        source: ./api
        target: /app
    command: npm run start

  ewok-ui:
    build: ui/
    tty: true
    container_name: ui
    environment:
      - FAST_REFRESH=false
    depends_on:
      - 'ewok-api'
    ports:
      - '3000:3000'
    networks:
      - app-network
    volumes:
      - type: bind
        source: ./ui
        target: /app
        
  
networks:
  app-network:
    driver: bridge
    